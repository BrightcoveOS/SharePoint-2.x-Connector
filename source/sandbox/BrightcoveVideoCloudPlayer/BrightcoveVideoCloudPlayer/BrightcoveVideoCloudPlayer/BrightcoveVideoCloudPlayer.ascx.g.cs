//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BrightcoveVideoCloudPlayer.BrightcoveVideoCloudPlayer {
    using System.Web.UI.WebControls.Expressions;
    using System.Web.UI.HtmlControls;
    using System.Collections;
    using System.Text;
    using System.Web.UI;
    using System.Collections.Generic;
    using System.Linq;
    using System.Xml.Linq;
    using Microsoft.SharePoint.WebPartPages;
    using System.Web.SessionState;
    using System.Configuration;
    using Microsoft.SharePoint;
    using System.Web;
    using System.Web.DynamicData;
    using System.Web.Caching;
    using System.Web.Profile;
    using System.ComponentModel.DataAnnotations;
    using System.Web.UI.WebControls;
    using System.Web.Security;
    using System;
    using Microsoft.SharePoint.Utilities;
    using System.Text.RegularExpressions;
    using System.Collections.Specialized;
    using System.Web.UI.WebControls.WebParts;
    using Microsoft.SharePoint.WebControls;
    using System.CodeDom.Compiler;
    
    
    public partial class BrightcoveVideoCloudPlayer {
        
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebPartCodeGenerator", "12.0.0.0")]
        public static implicit operator global::System.Web.UI.TemplateControl(BrightcoveVideoCloudPlayer target) 
        {
            return target == null ? null : target.TemplateControl;
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        private void @__BuildControlTree(global::BrightcoveVideoCloudPlayer.BrightcoveVideoCloudPlayer.BrightcoveVideoCloudPlayer @__ctrl) {
            @__ctrl.SetRenderMethodDelegate(new System.Web.UI.RenderMethod(this.@__Render__control1));
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        private void @__Render__control1(System.Web.UI.HtmlTextWriter @__w, System.Web.UI.Control parameterContainer) {
            @__w.Write("\r\n<style type=\"text/css\">\r\n\r\n.picklist.selected {\r\n    display:none;\r\n    }\r\n\r\n/*" +
                    " Picklist styles */\r\n.picklist, .picklistControls\r\n{\r\n    float:left;\r\n    verti" +
                    "cal-align:middle;\r\n}\r\n\r\n.picklist .content\r\n{\r\n    /*width:208px;*/\r\n    width:4" +
                    "50px;\r\n    height:250px;\r\n    overflow-x:hidden;\r\n    overflow-y:scroll;\r\n\tborde" +
                    "r:1px solid silver;\r\n}\r\n\r\n.picklist .videosAvailable\r\n{\r\n\t/*height:250px;*/\r\n   " +
                    " overflow-x:hidden;\r\n}\r\n    \r\n.picklist .content .item\r\n{\r\n    width:437px;\r\n   " +
                    " height:35px;\r\n    vertical-align:middle;\r\n    clear:both;\r\n    border-bottom:1p" +
                    "x solid silver;\r\n    padding-top:5px;\r\n    padding-bottom:5px;\r\n    cursor:point" +
                    "er;\r\n}\r\n    \r\n.videoName\r\n{\r\n    font-weight:bold;\r\n    color:#000000;\r\n    over" +
                    "flow: hidden;\r\n}\r\n    \r\n.videoId\r\n{\r\n    color:Gray;\r\n}\r\n\r\n.videoCheckbox\r\n{\r\n  " +
                    "  width:25px;\r\n    float:left;\r\n    display:none;\r\n}\r\n    \r\n.videoThumb\r\n{\r\n    " +
                    "width:40px;\r\n    float:left;\r\n    margin-right:5px;\r\n    margin-left:5px;\r\n}\r\n\r\n" +
                    ".videoMetadata\r\n{\r\n    width:367px;\r\n    float:left;\r\n    text-wrap:none;\r\n    o" +
                    "verflow-x:hidden;\r\n}\r\n\r\n.videoMetadata .videoName\r\n{\r\n    display:inline-block;\r" +
                    "\n    width:367px;\r\n    height:15px;\r\n    text-wrap:none;\r\n    overflow-x:hidden;" +
                    "\r\n    white-space: nowrap;\r\n}\r\n    \r\n.videoThumb img\r\n{\r\n    max-width:40px;\r\n  " +
                    "  max-height:30px;\r\n}\r\n\r\n.picklistControls\r\n{\r\n    display:none;\r\n\tmargin-top:80" +
                    "px;\r\n\twidth:100px;\r\n\ttext-align:center;\r\n}\r\n\r\n\r\n.picklistControls button\r\n{\r\n   " +
                    " margin-bottom:10px;\r\n    width:80px;\r\n    padding-left:2px;\r\n    padding-right:" +
                    "2px;\r\n}\r\n\r\n#divAccount{ margin-top:8px}\r\n\r\n.picklistControls .controlSection\r\n{\r" +
                    "\n    display:none;\r\n\tmargin-bottom:8px;\r\n}\r\n\r\n.searchBox\r\n{\r\n    margin-bottom:5" +
                    "px;\r\n}\r\n\r\n.searchBox input\r\n{\r\n\t/*width:181px;*/\r\n\twidth:223px;\r\n}\r\n\r\n.searchBox" +
                    " button\r\n{\r\n\twidth:25px;\r\n\tbackground-image:url(/_layouts/images/gosearch15.png)" +
                    ";\r\n    min-width:  1px;\r\n    padding: 1px;\r\n}\r\n\r\n.searchBox button, .searchBox i" +
                    "nput\r\n{\r\n\tmargin:0 0 0 0;\r\n\tborder:none;\r\n\tborder:1px solid silver;\r\n}\r\n\r\n.searc" +
                    "hBox_default_text\r\n{\r\n\tfont-style:italic;\r\n\tcolor:silver;\r\n}\r\n\r\n.itemSelected\r\n{" +
                    "\r\n\tbackground-color:#8bd1ee;\r\n}\r\n\r\n#playlistName, #playlistType, #tags, #videos\r" +
                    "\n{\r\n    width:200px;\r\n    font-size:12px;\r\n    font-family: Verdana,Arial,Helvet" +
                    "ica,sans-serif;\r\n}\r\n\r\n#playlistName, #tags, #videos\r\n{\r\n    height:16px;\r\n}\r\n\r\n#" +
                    "playlistType\r\n{\r\n    height:20px;\r\n}\r\n\r\n#divPicklist\r\n{\r\n    margin-top:5px;\r\n  " +
                    "  \r\n}\r\n\r\n.picklist .moveButtons input\r\n{\r\n    vertical-align:middle;\r\n}\r\n\r\n.pick" +
                    "list .moveButtons\r\n{\r\n    width:208px;\r\n    height:16px;\r\n    clear:both;\r\n    c" +
                    "olor:#000000;\r\n    vertical-align:middle;\r\n}\r\n\r\n.picklist .moveButtons > input\r\n" +
                    "{\r\n    margin-left:1px;\r\n    float:left;\r\n}\r\n\r\n.picklist .moveButtons > span\r\n{\r" +
                    "\n    float:right;\r\n}\r\n\r\n.picklist .moveButtons label\r\n{\r\n    margin-top:2px;\r\n  " +
                    "  float:left;\r\n    font-weight:normal;\r\n    color:gray;\r\n}\r\n\r\n.picklist .moveBut" +
                    "tons button\r\n{\r\n    width:50px;\r\n    height:20px;\r\n    font-size:11px;\r\n    padd" +
                    "ing-top:0;\r\n}\r\n\r\n.buttonBlock\r\n{\r\n text-align:right;\r\n}\r\n\r\n.divPicklist, #divPic" +
                    "klist\r\n{\r\n\toverflow:hidden;\r\n\t\r\n}\r\n\r\n.chooserContainer\r\n{\r\n    margin-left:25px;" +
                    "\r\n    \r\n}\r\n\r\n.videosAvailable\r\n{\r\n    margin-top: 10px;\r\n\twidth:250px;\r\n}\r\n</sty" +
                    "le>\r\n<video id=\"myPlayerID\"\r\ndata-embed=\"default\" \r\nclass=\"video-js\" \r\ncontrols>" +
                    "</video>\r\n\r\n<script id=\"PlayerScript\"></script><ol id=\"myPlaylistID\"></ol>\r\n<scr" +
                    "ipt src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\" type" +
                    "=\"text/javascript\"></script>\r\n<script src=\"https://ajax.googleapis.com/ajax/libs" +
                    "/jqueryui/1.10.2/jquery-ui.min.js\"></script>\r\n<script type=\"text/javascript\">\r\n " +
                    "   //Array to keep track of accounts\r\n    var SETTINGS_LIST = \"BrightcoveSetting" +
                    "s\";\r\n    var ACCOUNTS_LIST = \"Accounts\";\r\n    var accounts = [];\r\n    var proxyU" +
                    "rl = \"\";\r\n    var CMSAPIURL = \"https://cms.api.brightcove.com/\";\r\n    var Cookie" +
                    "Name = \"BCOAUTHToken\";\r\n\r\n    String.prototype.format = function (args) {\r\n     " +
                    "   var str = this;\r\n        return str.replace(String.prototype.format.regex, fu" +
                    "nction (item) {\r\n            var intVal = parseInt(item.substring(1, item.length" +
                    " - 1));\r\n            var replace;\r\n            if (intVal >= 0) {\r\n             " +
                    "   replace = args[intVal];\r\n            } else if (intVal === -1) {\r\n           " +
                    "     replace = \"{\";\r\n            } else if (intVal === -2) {\r\n                re" +
                    "place = \"}\";\r\n            } else {\r\n                replace = \"\";\r\n            }" +
                    "\r\n            return replace;\r\n        });\r\n    };\r\n    String.prototype.format." +
                    "regex = new RegExp(\"{-?[0-9]+}\", \"g\");\r\n\r\n    var playerId = \'");
            @__w.Write( PlayerID);

            @__w.Write("\';\r\n    var width = \'");
         @__w.Write( PlayerWidth);

            @__w.Write("\';\r\n    var height = \'");
          @__w.Write( PlayerHeight);

            @__w.Write("\';\r\n    var videoId = \'");
           @__w.Write( VideoID);

            @__w.Write("\';\r\n    var autoStart = \'");
             @__w.Write( AutoStart);

            @__w.Write("\';\r\n    var playlistId = \'");
              @__w.Write( PlaylistID);

            @__w.Write("\';\r\n    var backgroundColor = \'");
                   @__w.Write( BackgroundColor);

            @__w.Write("\';\r\n    var accountId = \'");
             @__w.Write( AccountID);

            @__w.Write("\';\r\n\r\n    var linkTemplate = \"https://players.brightcove.net/{0}/{1}_default/inde" +
                    "x.min.js\";\r\n    var styleTemplate = \"background-color:{0};\";\r\n\r\n    $(document)." +
                    "ready(function () {\r\n        InitVideoPlayer();\r\n        var inDesignMode = \"\";\r" +
                    "\n        var wikiInEditMode = \"\";\r\n        if (document.forms[MSOWebPartPageForm" +
                    "Name].MSOLayout_InDesignMode != null) {\r\n            inDesignMode = document.for" +
                    "ms[MSOWebPartPageFormName].MSOLayout_InDesignMode.value;\r\n        }\r\n        if " +
                    "(document.forms[MSOWebPartPageFormName]._wikiPageMode != null) {\r\n            wi" +
                    "kiInEditMode = document.forms[MSOWebPartPageFormName]._wikiPageMode.value;\r\n    " +
                    "    }\r\n\r\n        if (inDesignMode == \"1\" || wikiInEditMode == \"Edit\") {\r\n       " +
                    "     //alert(\'Page is in Edit Mode\');\r\n            $(\"div.UserControlGroup input" +
                    "[id*=\'VideoID_EDITOR\']\").parent().append(\'<input id=\"VideoId_BUILDER\" type=butto" +
                    "n value=\"...\"></input>\');       \r\n            $(\"div.UserControlGroup input[id*=" +
                    "\'PlaylistID_EDITOR\']\").parent().append(\'<input id=\"PlaylistId_BUILDER\" type=butt" +
                    "on value=\"...\"></input>\');\r\n\r\n            // add jquery CSS\r\n            $(\"head" +
                    "\").append(\"<link id=\'juery-ui-css\' href=\'//code.jquery.com/ui/1.11.4/themes/smoo" +
                    "thness/jquery-ui.css\' type=\'text/css\' rel=\'stylesheet\' />\");\r\n        }\r\n\r\n     " +
                    "   var videoIdOnClick = $(\"div.UserControlGroup input[id*=\'VideoId_BUILDER\']\").a" +
                    "ttr(\'onclick\');\r\n        if (videoIdOnClick == null || videoIdOnClick == \'\') {\r\n" +
                    "            videoIdOnClick = \"CreateVideoPopup();\";\r\n            $(\"div.UserCont" +
                    "rolGroup input[id*=\'VideoId_BUILDER\']\").attr(\'onclick\', videoIdOnClick);\r\n      " +
                    "  }\r\n\r\n        var playlistOnClick = $(\"div.UserControlGroup input[id*=\'Playlist" +
                    "Id_BUILDER\']\").attr(\'onclick\');\r\n        if (playlistOnClick == null || playlist" +
                    "OnClick == \'\') {\r\n            playlistOnClick = \"CreatePlaylistPopup();\";\r\n     " +
                    "       $(\"div.UserControlGroup input[id*=\'PlaylistId_BUILDER\']\").attr(\'onclick\'," +
                    " playlistOnClick);\r\n        }        \r\n    });\r\n\r\n    \r\n\r\n\r\n    function CreateV" +
                    "ideoPopup() {\r\n        if ($(\'#playlistPickList\').dialog(\'isOpen\') == true) {\r\n " +
                    "           $(\'#playlistPickList\').dialog(\'close\');\r\n        }\r\n        if ($(\'#v" +
                    "ideoPickList\').length > 0) {\r\n            \r\n            if ($(\'#videoPickList\')." +
                    "dialog(\'isOpen\') != true) {\r\n                $(\'#videoPickList\').dialog(\'open\');" +
                    "\r\n            }\r\n        }\r\n        else {\r\n\r\n\r\n            $(\"<div id=\\\"videoPi" +
                    "ckList\\\" class=\\\"chooserContainer\\\">\"\r\n                  + \"<div id=\\\"divAccount" +
                    "\\\">\"\r\n                  + \"<select id=\\\"Account\\\">\"\r\n                    + \"</se" +
                    "lect>\"\r\n                + \"</div>\"\r\n\r\n                + \"<div id=\\\"divPicklist\\\"" +
                    ">\"\r\n                    + \"<div class=\\\"picklist available\\\">\"\r\n                " +
                    "        + \"<div class=\\\"sectionHeader\\\">Available Videos</div>\"\r\n               " +
                    "         + \"<div class=\\\"searchBox\\\">\"\r\n                            + \"<input id" +
                    "=\\\"chooserSearchBox\\\" class=\\\"searchBox_default_text\\\" type=\\\"text\\\" placeholder" +
                    "=\\\"search videos\\\" onkeypress=\\\"return disableEnterKey(event, this);\\\" onchange=" +
                    "\\\"return doSearch(this);\\\" onfocus=\\\"if(this.value==\'search videos\'){this.value=" +
                    "\'\';$(this).removeClass(\'searchBox_default_text\');}\\\" /><button onclick=\\\"return " +
                    "doSearch();\\\">&nbsp;</button>\"\r\n                        + \"</div>\"\r\n            " +
                    "            + \"<div class=\\\"brightcove-player-dialog-sortvalue\\\">\"\r\n            " +
                    "                + \"Sort by:\"\r\n                        + \"<input type=\\\"radio\\\" n" +
                    "ame=\\\"sort\\\" onclick=\\\"doFilter(this,\'sort\')\\\" value=\\\"plays_total\\\" /><span>tot" +
                    "al plays</span>\"\r\n                        + \"<input type=\\\"radio\\\" name=\\\"sort\\\"" +
                    " onclick=\\\"doFilter(this, \'sort\')\\\" value=\\\"name\\\" checked /><span>display name<" +
                    "/span>\"\r\n                        + \"<input type=\\\"radio\\\" name=\\\"sort\\\" onclick=" +
                    "\\\"doFilter(this, \'sort\')\\\" value=\\\"created_at\\\" /><span>creation date</span>\"\r\n " +
                    "                       + \"<input type=\\\"radio\\\" name=\\\"sort\\\" onclick=\\\"doFilter" +
                    "(this, \'sort\')\\\" value=\\\"schedule_starts_at\\\" /><span>start date</span>\"\r\n      " +
                    "              + \"</div>\"\r\n                    + \"<div class=\\\"brightcove-player-" +
                    "dialog-sortdirection\\\">\"\r\n                        + \"Order by:\"\r\n               " +
                    "         + \"<input type=\\\"radio\\\" name=\\\"order\\\" onclick=\\\"doFilter(this, \'order" +
                    "\')\\\" value=\\\"ascending\\\" checked /><span>ascending</span>\"\r\n                    " +
                    "    + \"<input type=\\\"radio\\\" name=\\\"order\\\" onclick=\\\"doFilter(this, \'order\')\\\" " +
                    "value=\\\"descending\\\" /><span>descending</span>\"\r\n                    + \"</div>\"\r" +
                    "\n                    + \"<div class=\\\"content videosAvailable\\\"></div>\"\r\n        " +
                    "            + \"<div id=\\\"picklistPaging\\\" class=\\\"paging\\\"></div>\"\r\n            " +
                    "    + \"</div>\"\r\n\r\n                + \"<div class=\\\"picklistControls\\\">\"\r\n        " +
                    "            + \"<div class=\\\"controlSection\\\">\"\r\n                        + \"<butt" +
                    "on onclick=\\\"return AddSelectedItems();\\\">&gt;&gt;</button>\"\r\n                  " +
                    "      + \"<button onclick=\\\"return RemoveSelectedItems();\\\">&lt;&lt;</button>\"\r\n " +
                    "                   + \"</div>\"\r\n                    + \"<div class=\\\"controlSectio" +
                    "n\\\">\"\r\n                        + \"<button onclick=\\\"$(\'.videosAvailable .item\')." +
                    "each(function(){$(this).addClass(\'.itemSelected\');});return AddSelectedItems();\\" +
                    "\">&gt;&gt;</button>\"\r\n                        + \"<button onclick=\\\"$(\'.videosSel" +
                    "ected .item\').each(function(){$(this).addClass(\'.itemSelected\');});return Remove" +
                    "SelectedItems();\\\">&lt;&lt;</button>\"\r\n                    + \"</div>\"\r\n         " +
                    "       + \"</div>\"\r\n\r\n                + \"<div class=\\\"picklist selected\\\">\"\r\n    " +
                    "                + \"<div class=\\\"sectionHeader\\\">Videos in this Playlist</div>\"\r\n" +
                    "                    + \"<div class=\\\"moveButtons\\\">\"\r\n                        + \"" +
                    "<input type=\\\"checkbox\\\" onclick=\\\"MoveNone(this.checked);\\\" id=\\\"inpMoveSelecte" +
                    "d\\\" name=\\\"moveSelected\\\"/> <label for=\\\"moveSelected\\\">move video</label>\"\r\n   " +
                    "                     + \"<span>\"\r\n                            + \"<button onclick=" +
                    "\\\"return MoveUp();\\\">Up</button><button onclick=\\\"return MoveDown();\\\">Down</but" +
                    "ton>\"\r\n                        + \"</span>\"\r\n                    + \"</div>\"\r\n    " +
                    "                + \"<div class=\\\"content videosSelected\\\"></div>\"\r\n              " +
                    "  + \"</div>\"\r\n            + \"</div>\"\r\n            + \"<div class=\\\"buttonBlock\\\">" +
                    "\"\r\n                    + \"<p>\"\r\n                        + \"<button id=\\\"btnSave\\" +
                    "\" onclick=\\\"AddSelectedItems();return ChooserDone(true);\\\">OK</button>&nbsp;&nbs" +
                    "p;<button id=\\\"btnCancel\\\" onclick=\\\"return ChooserCancel(true);\\\">Cancel</butto" +
                    "n>\"\r\n                    + \"</p>\"\r\n            + \"</div>\"\r\n            + \"</div>" +
                    "\").dialog({\r\n                width: 515\r\n            });\r\n            $(\'.ui-dia" +
                    "log-titlebar\').hide();\r\n            retrieveListItems(false);\r\n\r\n            $(\'" +
                    "#Account\').change(function () {\r\n                // clear token\r\n               " +
                    " deleteCookie(CookieName);\r\n\r\n                $(\'.videosAvailable\').empty();\r\n  " +
                    "              accountId = $(\'#Account\').find(\':selected\').attr(\'accountid\');\r\n  " +
                    "              var i;\r\n                for (i = 0; i < accounts.length; i++) {\r\n " +
                    "                   if (accounts[i].AccountId == accountId) {\r\n                  " +
                    "      getBrightcoveItems(accounts[i]);\r\n                        break;\r\n        " +
                    "            }\r\n                }\r\n            });\r\n\r\n            $(\'#Account\').t" +
                    "rigger(\'change\');\r\n        }\r\n    };\r\n\r\n    function CreatePlaylistPopup() {\r\n  " +
                    "      if ($(\'#videoPickList\').dialog(\'isOpen\') == true) {\r\n            $(\'#video" +
                    "PickList\').dialog(\'close\');\r\n        }\r\n        if ($(\'#playlistPickList\').lengt" +
                    "h > 0) {           \r\n\r\n            if ($(\'#playlistPickList\').dialog(\'isOpen\') !" +
                    "= true) {\r\n                $(\'#playlistPickList\').dialog(\'open\');\r\n            }" +
                    "\r\n        }\r\n        else {\r\n\r\n\r\n            $(\"<div id=\\\"playlistPickList\\\" cla" +
                    "ss=\\\"chooserContainer\\\">\"\r\n                  + \"<div id=\\\"divAccount\\\">\"\r\n      " +
                    "            + \"<select id=\\\"AccountPlaylist\\\">\"\r\n                    + \"</select" +
                    ">\"\r\n                + \"</div>\"\r\n\r\n                + \"<div id=\\\"divPicklist\\\" >\"\r" +
                    "\n                    + \"<div class=\\\"picklist available\\\">\"\r\n                   " +
                    "     + \"<div class=\\\"sectionHeader\\\">Available Playlists</div>\"\r\n               " +
                    "         + \"<div class=\\\"searchBox\\\">\"\r\n                            + \"<input id" +
                    "=\\\"chooserSearchBox\\\" class=\\\"searchBox_default_text\\\" type=\\\"text\\\" placeholder" +
                    "=\\\"search playlists\\\" onkeypress=\\\"return disableEnterKey(event, this);\\\" onchan" +
                    "ge=\\\"return doSearch(this);\\\" onfocus=\\\"if(this.value==\'search playlists\'){this." +
                    "value=\'\';$(this).removeClass(\'searchBox_default_text\');}\\\" /><button onclick=\\\"r" +
                    "eturn doSearch();\\\">&nbsp;</button>\"\r\n                        + \"</div>\"\r\n      " +
                    "                  + \"<div class=\\\"brightcove-player-dialog-sortvalue\\\">\"\r\n      " +
                    "                      + \"Sort by:\"\r\n                        + \"<input type=\\\"rad" +
                    "io\\\" name=\\\"sort\\\" onclick=\\\"doFilter(this, \'sort\')\\\" value=\\\"name\\\" checked /><" +
                    "span>display name</span>\"\r\n                        + \"<input type=\\\"radio\\\" name" +
                    "=\\\"sort\\\" onclick=\\\"doFilter(this, \'sort\')\\\" value=\\\"updated_at\\\" /><span>modifi" +
                    "ed date</span>\"\r\n                    + \"</div>\"\r\n                    + \"<div cla" +
                    "ss=\\\"brightcove-player-dialog-sortdirection\\\">\"\r\n                        + \"Orde" +
                    "r by:\"\r\n                        + \"<input type=\\\"radio\\\" name=\\\"order\\\" onclick=" +
                    "\\\"doFilter(this, \'order\')\\\" value=\\\"ascending\\\" checked /><span>ascending</span>" +
                    "\"\r\n                        + \"<input type=\\\"radio\\\" name=\\\"order\\\" onclick=\\\"doF" +
                    "ilter(this, \'order\')\\\" value=\\\"descending\\\" /><span>descending</span>\"\r\n        " +
                    "            + \"</div>\"\r\n                    + \"<div class=\\\"content videosAvaila" +
                    "ble\\\"></div>\"\r\n                    + \"<div id=\\\"picklistPaging\\\" class=\\\"paging\\" +
                    "\"></div>\"\r\n                + \"</div>\"\r\n\r\n                + \"<div class=\\\"picklis" +
                    "tControls\\\">\"\r\n                    + \"<div class=\\\"controlSection\\\">\"\r\n         " +
                    "               + \"<button onclick=\\\"return AddSelectedItems();\\\">&gt;&gt;</butto" +
                    "n>\"\r\n                        + \"<button onclick=\\\"return RemoveSelectedItems();\\" +
                    "\">&lt;&lt;</button>\"\r\n                    + \"</div>\"\r\n                    + \"<di" +
                    "v class=\\\"controlSection\\\">\"\r\n                        + \"<button onclick=\\\"$(\'.v" +
                    "ideosAvailable .item\').each(function(){$(this).addClass(\'.itemSelected\');});retu" +
                    "rn AddSelectedItems();\\\">&gt;&gt;</button>\"\r\n                        + \"<button " +
                    "onclick=\\\"$(\'.videosSelected .item\').each(function(){$(this).addClass(\'.itemSele" +
                    "cted\');});return RemoveSelectedItems();\\\">&lt;&lt;</button>\"\r\n                  " +
                    "  + \"</div>\"\r\n                + \"</div>\"\r\n\r\n                + \"<div class=\\\"pick" +
                    "list selected\\\">\"\r\n                    + \"<div class=\\\"sectionHeader\\\">Videos in" +
                    " this Playlist</div>\"\r\n                    + \"<div class=\\\"moveButtons\\\">\"\r\n    " +
                    "                    + \"<input type=\\\"checkbox\\\" onclick=\\\"MoveNone(this.checked)" +
                    ";\\\" id=\\\"inpMoveSelected\\\" name=\\\"moveSelected\\\"/> <label for=\\\"moveSelected\\\">m" +
                    "ove video</label>\"\r\n                        + \"<span>\"\r\n                        " +
                    "    + \"<button onclick=\\\"return MoveUp();\\\">Up</button><button onclick=\\\"return " +
                    "MoveDown();\\\">Down</button>\"\r\n                        + \"</span>\"\r\n             " +
                    "       + \"</div>\"\r\n                    + \"<div class=\\\"content videosSelected\\\">" +
                    "</div>\"\r\n                + \"</div>\"\r\n            + \"</div>\"\r\n            + \"<div" +
                    " class=\\\"buttonBlock\\\">\"\r\n                    + \"<p>\"\r\n                        +" +
                    " \"<button id=\\\"btnSave\\\" onclick=\\\"AddSelectedItems();return ChooserDone(true);\\" +
                    "\">OK</button>&nbsp;&nbsp;<button id=\\\"btnCancel\\\" onclick=\\\"return ChooserCancel" +
                    "(true);\\\">Cancel</button>\"\r\n                    + \"</p>\"\r\n            + \"</div>\"" +
                    "\r\n            + \"</div>\").dialog({\r\n                width: 515\r\n            });\r" +
                    "\n            $(\'.ui-dialog-titlebar\').hide();\r\n            retrieveListItems(tru" +
                    "e);\r\n\r\n            $(\'#AccountPlaylist\').change(function () {\r\n                /" +
                    "/ clear token\r\n                deleteCookie(CookieName);\r\n\r\n                $(\'." +
                    "videosAvailable\').empty();\r\n                accountId = $(\'#AccountPlaylist\').fi" +
                    "nd(\':selected\').attr(\'accountid\');\r\n                var i;\r\n                for " +
                    "(i = 0; i < accounts.length; i++) {\r\n                    if (accounts[i].Account" +
                    "Id == accountId) {\r\n                        getBrightcoveItems(accounts[i]);\r\n  " +
                    "                      break;\r\n                    }\r\n                }\r\n        " +
                    "    });\r\n\r\n            $(\'#AccountPlaylist\').trigger(\'change\');\r\n        }\r\n    " +
                    "};\r\n    function InitVideoPlayer() {\r\n        var scriptLink = linkTemplate.form" +
                    "at([accountId, playerId]);\r\n        var backgroundStyle = styleTemplate.format([" +
                    "backgroundColor]);\r\n        if (playlistId != \"\") {\r\n            document.getEle" +
                    "mentById(\"myPlayerID\").setAttribute(\"data-playlist-id\", playlistId);\r\n          " +
                    "  document.getElementById(\"myPlaylistID\").setAttribute(\"class\", \"vjs-playlist\");" +
                    "\r\n        }\r\n        else {\r\n            document.getElementById(\"myPlayerID\").s" +
                    "etAttribute(\"data-video-id\", videoId);\r\n        }\r\n        document.getElementBy" +
                    "Id(\"myPlayerID\").setAttribute(\"data-account\", accountId);\r\n        document.getE" +
                    "lementById(\"myPlayerID\").setAttribute(\"data-player\", playerId);\r\n        documen" +
                    "t.getElementById(\"myPlayerID\").setAttribute(\"width\", width);\r\n        document.g" +
                    "etElementById(\"myPlayerID\").setAttribute(\"height\", height);\r\n        document.ge" +
                    "tElementById(\"myPlayerID\").setAttribute(\"style\", backgroundStyle);\r\n\r\n        if" +
                    " (autoStart == \'True\') {\r\n            document.getElementById(\"myPlayerID\").setA" +
                    "ttribute(\"autoplay\", autoStart);\r\n        }\r\n\r\n        document.getElementById(\"" +
                    "PlayerScript\").setAttribute(\"src\", scriptLink)\r\n    };\r\n    function retrieveLis" +
                    "tItems(isPlaylist) {\r\n        this.isPlaylist = isPlaylist;\r\n        var clientC" +
                    "ontext = new SP.ClientContext();\r\n        var accountsList = clientContext.get_s" +
                    "ite().get_rootWeb().get_lists().getByTitle(ACCOUNTS_LIST);\r\n        var settings" +
                    "List = clientContext.get_site().get_rootWeb().get_lists().getByTitle(SETTINGS_LI" +
                    "ST);\r\n\r\n        var accountQuery = new SP.CamlQuery();\r\n        accountQuery.set" +
                    "_viewXml(\'<View><Query><Where><Geq><FieldRef Name=\\\'ID\\\'/>\' +\r\n            \'<Val" +
                    "ue Type=\\\'Number\\\'>1</Value></Geq></Where></Query><RowLimit>500</RowLimit></View" +
                    ">\');\r\n        this.accountListItems = accountsList.getItems(accountQuery);\r\n\r\n  " +
                    "      var settingsQuery = new SP.CamlQuery();\r\n        settingsQuery.set_viewXml" +
                    "(\'<View><Query><Where><Geq><FieldRef Name=\\\'ID\\\'/>\' +\r\n            \'<Value Type=" +
                    "\\\'Number\\\'>0</Value></Geq></Where></Query><RowLimit>1</RowLimit></View>\');\r\n    " +
                    "    this.settingsListItems = settingsList.getItems(settingsQuery);\r\n\r\n        cl" +
                    "ientContext.load(this.accountListItems);\r\n        clientContext.load(this.settin" +
                    "gsListItems);\r\n\r\n        clientContext.executeQueryAsync(Function.createDelegate" +
                    "(this, this.onQuerySucceeded), Function.createDelegate(this, this.onQueryFailed)" +
                    ");\r\n    }\r\n\r\n    function onQuerySucceeded(sender, args) {\r\n        accounts = [" +
                    "];\r\n        var accountListItemEnumerator = this.accountListItems.getEnumerator(" +
                    ");\r\n        var settingsListItemEnumerator = this.settingsListItems.getEnumerato" +
                    "r();\r\n        if (isPlaylist) {\r\n            $(\'#AccountPlaylist\').empty();\r\n   " +
                    "         $(\'#AccountPlaylist\').append($(\'<option>\', {\r\n                value: \'\'" +
                    ",\r\n                text: \'Select account\',\r\n                accountid: \'\'\r\n     " +
                    "       }));\r\n        } else {\r\n            $(\'#Account\').empty();\r\n            $" +
                    "(\'#Account\').append($(\'<option>\', {\r\n                value: \'\',\r\n               " +
                    " text: \'Select account\',\r\n                accountid: \'\'\r\n            }));\r\n     " +
                    "   }\r\n\r\n        while (settingsListItemEnumerator.moveNext()) {\r\n            var" +
                    " oListItem = settingsListItemEnumerator.get_current();\r\n            proxyUrl = o" +
                    "ListItem.get_item(\'ProxyUrl\');\r\n            break;\r\n        }\r\n\r\n        while (" +
                    "accountListItemEnumerator.moveNext()) {\r\n            var oListItem = accountList" +
                    "ItemEnumerator.get_current();\r\n            var account = {\r\n                Titl" +
                    "e : oListItem.get_item(\'Title\'),\r\n                ClientId : oListItem.get_item(" +
                    "\'ClientId\'),\r\n                ClientSecret : oListItem.get_item(\'ClientSecret\')," +
                    "\r\n                AccountId: oListItem.get_item(\'AccountId\'),\r\n                I" +
                    "d: oListItem.get_id()\r\n            };\r\n            accounts.push(account);\r\n    " +
                    "        if(isPlaylist)\r\n            {\r\n                $(\'#AccountPlaylist\').app" +
                    "end($(\'<option>\', {\r\n                    value: account.Id,\r\n                   " +
                    " text: account.Title,\r\n                    accountid: account.AccountId\r\n       " +
                    "         }));\r\n            }\r\n            else\r\n            {\r\n                $" +
                    "(\'#Account\').append($(\'<option>\', {\r\n                    value: account.Id,\r\n   " +
                    "                 text: account.Title,\r\n                    accountid: account.Ac" +
                    "countId\r\n                }));\r\n            }\r\n            \r\n        }\r\n\r\n       " +
                    " $(\'#Account\').val(\'\');\r\n        $(\'#AccountPlaylist\').val(\'\');\r\n    }\r\n\r\n    fu" +
                    "nction onQueryFailed(sender, args) {\r\n        alert(\'Request failed. \' + args.ge" +
                    "t_message() + \'\\n\' + args.get_stackTrace());\r\n    }\r\n\r\n    function ChooserCance" +
                    "l(doCloseWindow) {\r\n        $(\'.videosAvailable\').empty();\r\n        $(\'.chooserC" +
                    "ontainer\').dialog(\'close\');\r\n        $(\'#videoPickList\').remove();\r\n        $(\'#" +
                    "playlistPickList\').remove();\r\n        \r\n    }\r\n\r\n    function ChooserDone(doClos" +
                    "eWindow)\r\n    {\r\n        if (doCloseWindow)\r\n        {\r\n            $(\'.chooserC" +
                    "ontainer\').dialog(\'close\');\r\n        }\r\n    }\r\n    function AddSelectedItems()\r\n" +
                    "    {\r\n        var isPlaylist = getIsPlaylist();\r\n        //Get accountId of sel" +
                    "ected and assign to accountId textbox\r\n        accountId = $((isPlaylist ? \'#Acc" +
                    "ountPlaylist\' : \'#Account\')).find(\':selected\').attr(\'accountid\');\r\n        $(\"di" +
                    "v.UserControlGroup input[id*=\'AccountID_EDITOR\']\").val(accountId);\r\n\r\n        //" +
                    " get selected item\r\n        var selectedItem = $(\'.videosAvailable .item.itemSel" +
                    "ected\');\r\n        var selectedItemId = \'\';\r\n        if (selectedItem.length > 0)" +
                    " {\r\n            selectedItemId = $(selectedItem).attr(\'videoid\');\r\n        }\r\n  " +
                    "      // assign to appropriate field value\r\n        if (isPlaylist) {\r\n         " +
                    "   $(\"div.UserControlGroup input[id*=\'VideoID_EDITOR\']\").val(\'\');\r\n            $" +
                    "(\"div.UserControlGroup input[id*=\'PlaylistID_EDITOR\']\").val(selectedItemId);\r\n  " +
                    "      } else {\r\n            $(\"div.UserControlGroup input[id*=\'VideoID_EDITOR\']\"" +
                    ").val(selectedItemId);\r\n            $(\"div.UserControlGroup input[id*=\'PlaylistI" +
                    "D_EDITOR\']\").val(\'\');\r\n        }\r\n\r\n        $(\'#videoPickList\').remove();\r\n     " +
                    "   $(\'#playlistPickList\').remove();\r\n    }\r\n\r\n    function getIsPlaylist() {\r\n  " +
                    "      var videoAvailable = $(\'#Account\').length > 0;\r\n        var videoHidden = " +
                    "$(\'#Account:hidden\').length > 0;\r\n        var playlistAvailable = $(\'#AccountPla" +
                    "ylist\').length > 0;\r\n        var playlistHidden = $(\'#AccountPlaylist:hidden\').l" +
                    "ength > 0;\r\n        return (playlistAvailable && !playlistHidden);\r\n    }\r\n\r\n   " +
                    " function getToken (account) {\r\n        // do we have a current token?\r\n        " +
                    "var token = getCookie(CookieName);\r\n        // else, obtain\r\n        var dataStr" +
                    "ing = \'grant_type=client_credentials&client_id=\' + account.ClientId + \'&client_s" +
                    "ecret=\' + account.ClientSecret;\r\n        var authProxyUrl = proxyUrl;\r\n        i" +
                    "f (authProxyUrl.lastIndexOf(\"/\") != (authProxyUrl.length - 1)) {\r\n            au" +
                    "thProxyUrl += \'/\';\r\n        }\r\n        authProxyUrl += \'api/auth\';\r\n        $.aj" +
                    "ax({\r\n            url: authProxyUrl,\r\n            type: \"POST\",\r\n            dat" +
                    "a: dataString,\r\n            success: function (data) {\r\n                var toke" +
                    "nResponse = jQuery.parseJSON(data);\r\n                token = tokenResponse.acces" +
                    "s_token;\r\n                var expiresIn = tokenResponse.expires_in;\r\n\r\n         " +
                    "       // set token\r\n                setCookie(CookieName, token, expiresIn);\r\n " +
                    "           },\r\n            error: function (jqXHR, textStatus, errorThrown) {\r\n " +
                    "               alert(textStatus);\r\n            }\r\n        });        \r\n    }\r\n  " +
                    "  function getBrightcoveItems (account) {\r\n        var isPlaylist = getIsPlaylis" +
                    "t();\r\n        var token = getCookie(CookieName);\r\n        $(\'.videosAvailable\')." +
                    "empty();\r\n\r\n        var func = function (account_id) {\r\n            var apiUrl;\r" +
                    "\n            var searchTerm = $(\'#chooserSearchBox\').val();\r\n            var sor" +
                    "tValue = getSortValue(isPlaylist);\r\n            var sortDirection = getSortDirec" +
                    "tion(isPlaylist);\r\n            if (isPlaylist) {\r\n                apiUrl = CMSAP" +
                    "IURL + \'v1/accounts/\' + account_id + \'/playlists?\';\r\n            }\r\n            " +
                    "else {\r\n                apiUrl = CMSAPIURL + \'v1/accounts/\' + account_id + \'/vid" +
                    "eos?limit=30&\';\r\n            }\r\n            apiUrl += \"sort=\" + sortDirection + " +
                    "sortValue;\r\n            if (searchTerm != \'\') {\r\n                apiUrl += \"&q=\"" +
                    " + searchTerm;\r\n            }\r\n\r\n            var token = getCookie(CookieName);\r" +
                    "\n            $.ajax({\r\n                url: apiUrl,\r\n                headers: {\r" +
                    "\n                    \"Authorization\": \"Bearer \" + token,\r\n                    \"C" +
                    "ontent-Type\": \"application/json\"\r\n                },\r\n                success: f" +
                    "unction (json) {\r\n                    var buffer = new Array();\r\n               " +
                    "     $(json).each(function (index, item) {\r\n                        var video;\r\n" +
                    "                        if (isPlaylist)\r\n                        {\r\n            " +
                    "                video = {\r\n                                name: item.name,\r\n   " +
                    "                             id: item.id,\r\n                                thumb" +
                    "nailURL: _spPageContextInfo.siteAbsoluteUrl + \"/Style%20Library/Media%20Player/V" +
                    "ideoPreview.png\"\r\n                            };\r\n                        }\r\n   " +
                    "                     else\r\n                        {\r\n                          " +
                    "  video = {\r\n                                name: item.name,\r\n                 " +
                    "               id: item.id,\r\n                                thumbnailURL: (item" +
                    ".images.thumbnail != null ? item.images.thumbnail.src :  _spPageContextInfo.site" +
                    "AbsoluteUrl + \"/Style%20Library/Media%20Player/VideoPreview.png\")\r\n             " +
                    "               }\r\n                        };\r\n                        buffer.pus" +
                    "h(CreatePicklistItem(video));\r\n                    })\r\n                    \r\n   " +
                    "                 $(\'.videosAvailable\').html(buffer.join(\'\'));\r\n                }" +
                    ",\r\n                error: function (jqXHR, textStatus, errorThrown) {\r\n         " +
                    "           alert(textStatus);\r\n                }\r\n            });\r\n        };\r\n\r" +
                    "\n        if (token == \'\') {            \r\n            getToken(account);\r\n       " +
                    " } else {\r\n            func(account.AccountId);\r\n        }\r\n    }\r\n\r\n    functio" +
                    "n doSearch() {\r\n        var isPlaylist = getIsPlaylist();\r\n        var accountId" +
                    " = \'\';\r\n        if (isPlaylist) {\r\n            accountId = $(\'#AccountPlaylist\')" +
                    ".find(\':selected\').attr(\'accountid\');\r\n        } else {\r\n            accountId =" +
                    " $(\'#Account\').find(\':selected\').attr(\'accountid\');\r\n        }\r\n        var i;\r\n" +
                    "        for (i = 0; i < accounts.length; i++) {\r\n            if (accounts[i].Acc" +
                    "ountId == accountId) {\r\n                getBrightcoveItems(accounts[i]);\r\n      " +
                    "          break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function doFilter() {\r\n" +
                    "        doSearch();\r\n    }\r\n\r\n    function getSortValue(isPlaylist) {\r\n        v" +
                    "ar sortValue = \"updated_at\";\r\n        var selectedVal = \"\";\r\n        var selecte" +
                    "d = $((isPlaylist ? \"#playlistPickList\" : \"#videoPickList\") + \" .brightcove-play" +
                    "er-dialog-sortvalue input[type=\'radio\']:checked\");\r\n        if (selected.length " +
                    "> 0) {\r\n            sortValue = selected.val();\r\n        }\r\n        if (isPlayli" +
                    "st) {\r\n            // Sort Allowed values: \"name\", \"updated_at\"\r\n            if " +
                    "(sortValue == null || sortValue == \'\') {\r\n                sortValue = \'name\';\r\n " +
                    "           }\r\n        } else {\r\n            // Sort Allowed values: \r\n          " +
                    "  // \"name\", \"reference_id\", \"created_at\", \"published_at\",\r\n            // \"upda" +
                    "ted_at\", \"schedule_starts_at\", \"schedule_ends_at\",\r\n            // \"state\", \"pla" +
                    "ys_total\", \"plays_trailing_week\"\r\n            if (sortValue == null || sortValue" +
                    " == \'\') {\r\n                sortValue = \'plays_total\';\r\n            }\r\n        }\r" +
                    "\n        \r\n        return sortValue;\r\n    }\r\n    function getSortDirection(isPla" +
                    "ylist) {\r\n        var selectedVal = \"\";\r\n        var selected = $((isPlaylist ? " +
                    "\"#playlistPickList\" : \"#videoPickList\") + \" .brightcove-player-dialog-sortdirect" +
                    "ion input[type=\'radio\']:checked\");\r\n        if (selected.length > 0) {\r\n        " +
                    "    selectedVal = selected.val();\r\n        }\r\n        return (selectedVal == \"as" +
                    "cending\" ? \"\" : \"-\");\r\n    }\r\n    \r\n    function CreatePicklistItem(video) {\r\n  " +
                    "      var result =\r\n            \'<div class=\"item\" videoId=\"\' + video.id + \'\" on" +
                    "click=\"selectToggleItem(this);\">\' +\r\n            \'    <div class=\"videoCheckbox\"" +
                    "><input type=\"checkbox\" /></div>\' +\r\n            \'    <div class=\"videoThumb\"><i" +
                    "mg src=\"\' + video.thumbnailURL + \'\" /></div>\' +\r\n            \'    <div class=\"vi" +
                    "deoMetadata\">\' +\r\n            \'        <span class=\"videoName\">\' + video.name + " +
                    "\'</span><br />\' +\r\n            \'        <span class=\"videoId\">id: \' + video.id +" +
                    " \'</span>\' +\r\n            \'    </div>\' +\r\n            \'</div>\';\r\n\r\n        retur" +
                    "n result;\r\n    }\r\n\r\n    function selectToggleItem(selectedItem) {\r\n        // re" +
                    "move all\r\n        $(\'.videosAvailable .item\').removeClass(\'itemSelected\');\r\n    " +
                    "    // add this one\r\n        $(selectedItem).addClass(\'itemSelected\');\r\n    }\r\n\r" +
                    "\n    function getCookie (cookieName) {\r\n        var name = cookieName + \"=\";\r\n  " +
                    "      var ca = document.cookie.split(\';\');\r\n        for (var i = 0; i < ca.lengt" +
                    "h; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == \' \') {\r" +
                    "\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(n" +
                    "ame) == 0) {\r\n                return c.substring(name.length, c.length);\r\n      " +
                    "      }\r\n        }\r\n        return \"\";\r\n    }\r\n    function setCookie (cookieNam" +
                    "e, cookieValue, expirationSeconds) {\r\n        var d = new Date();\r\n        d.set" +
                    "Time(d.getTime() + (expirationSeconds * 1000));\r\n        var expires = \"expires=" +
                    "\" + d.toGMTString();\r\n        document.cookie = cookieName + \"=\" + cookieValue +" +
                    " \"; \" + expires;\r\n    }\r\n    function deleteCookie(cookieName) {\r\n        docume" +
                    "nt.cookie = cookieName + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\r\n    }\r\n\r\n<" +
                    "/script>");
        }
        
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        private void InitializeControl() {
            this.@__BuildControlTree(this);
            this.Load += new global::System.EventHandler(this.Page_Load);
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        protected virtual object Eval(string expression) {
            return global::System.Web.UI.DataBinder.Eval(this.Page.GetDataItem(), expression);
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        protected virtual string Eval(string expression, string format) {
            return global::System.Web.UI.DataBinder.Eval(this.Page.GetDataItem(), expression, format);
        }
    }
}
